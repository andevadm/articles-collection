{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Image.js","webpack:///./src/templates/article_page.js"],"names":["Image","string","bool","forwardRef","_ref","ref","bsPrefix","className","fluid","rounded","roundedCircle","thumbnail","props","classes","createElement","displayName","defaultProps","ArticlePage","data","article","markdownRemark","image","file","publicURL","console","log","frontmatter","title","Container","Row","Col","md","author","date","description","keywords","join","src","alt","dangerouslySetInnerHTML","__html","html","to","query"],"mappings":"uUAsCIA,GA5BQ,IAAUC,OAKb,IAAUC,KAKR,IAAUA,KAKJ,IAAUA,KAKd,IAAUA,KAQX,IAAMC,YAAW,SAAUC,EAAMC,GAC3C,IAAIC,EAAWF,EAAKE,SAChBC,EAAYH,EAAKG,UACjBC,EAAQJ,EAAKI,MACbC,EAAUL,EAAKK,QACfC,EAAgBN,EAAKM,cACrBC,EAAYP,EAAKO,UACjBC,EAAQ,YAA8BR,EAAM,CAAC,WAAY,YAAa,QAAS,UAAW,gBAAiB,cAE/GE,EAAW,YAAmBA,EAAU,OACxC,IAAIO,EAAU,IAAWL,GAASF,EAAW,SAAUG,GAAW,UAAWC,GAAiB,iBAAkBC,GAAaL,EAAW,cACxI,OAAoB,IAAMQ,cAAc,MAAO,YAAS,CAEtDT,IAAKA,GACJO,EAAO,CACRL,UAAW,IAAWA,EAAWM,UAGrCb,EAAMe,YAAc,QACpBf,EAAMgB,aAzBa,CACjBR,OAAO,EACPC,SAAS,EACTC,eAAe,EACfC,WAAW,GAsBE,Q,wBCnDA,SAASM,EAAT,GAAgC,IAATC,EAAQ,EAARA,KAE9BC,EAAUD,EAAKE,eACfC,EAAQH,EAAKI,KAAKC,UAKxB,OAHAC,QAAQC,IAAR,kCAA8CN,EAAQO,YAAYC,MAAlE,KACAH,QAAQC,IAAIJ,GAGV,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKM,MAAOR,EAAQO,YAAYC,QAChC,kBAACC,EAAA,EAAD,CAAWpB,OAAK,GACd,kBAACqB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,4BAAKX,EAAQO,YAAYC,SAG7B,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,IAAE,EAACxB,UAAU,oBAChB,yBAAKA,UAAU,kBACb,2CADF,IAC4BY,EAAQO,YAAYM,QAEhD,yBAAKzB,UAAU,gBACb,8CADF,IAC+BY,EAAQO,YAAYO,MAEnD,yBAAK1B,UAAU,oBACb,2BAAG,6CACH,2BAAIY,EAAQO,YAAYQ,cAE1B,yBAAK3B,UAAU,oBACb,6CADF,IAC8BY,EAAQO,YAAYS,SAASC,KAAK,SAGlE,kBAACN,EAAA,EAAD,CAAKC,IAAE,EAACxB,UAAU,iBACd,kBAAC,EAAD,CACE8B,IAAKhB,EACLiB,IAAKnB,EAAQO,YAAYC,MACzBnB,OAAK,EACLC,SAAO,MAIf,kBAACoB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKvB,UAAU,gBACb,yBAAKgC,wBAAyB,CAAEC,OAAQrB,EAAQsB,UAGpD,kBAACZ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,6BACA,kBAAC,OAAD,CAAMY,GAAG,YAAT,8BASL,IAAMC,EAAK","file":"component---src-templates-article-page-js-457be618e4483bb39c65.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nexport var propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nvar defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nvar Image = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      rounded = _ref.rounded,\n      roundedCircle = _ref.roundedCircle,\n      thumbnail = _ref.thumbnail,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"fluid\", \"rounded\", \"roundedCircle\", \"thumbnail\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  var classes = classNames(fluid && bsPrefix + \"-fluid\", rounded && \"rounded\", roundedCircle && \"rounded-circle\", thumbnail && bsPrefix + \"-thumbnail\");\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { Container, Row, Col, Image } from \"react-bootstrap\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nexport default function ArticlePage({ data }) {\r\n  \r\n  const article = data.markdownRemark;\r\n  const image = data.file.publicURL;\r\n\r\n  console.log(`Image obtained for the article ${article.frontmatter.title}:`);\r\n  console.log(image);\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={article.frontmatter.title} />\r\n      <Container fluid>\r\n        <Row>\r\n          <Col>\r\n            <h2>{article.frontmatter.title}</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md className=\"article-metadata\">\r\n            <div className=\"article-author\">\r\n              <strong>Author:</strong> {article.frontmatter.author}\r\n            </div>\r\n            <div className=\"article-date\">\r\n              <strong>Published:</strong> {article.frontmatter.date}\r\n            </div>\r\n            <div className=\"article-abstract\">\r\n              <p><strong>Abstract</strong></p>\r\n              <p>{article.frontmatter.description}</p>\r\n            </div>\r\n            <div className=\"article-keywords\">\r\n              <strong>Keywords:</strong> {article.frontmatter.keywords.join(' , ')}\r\n            </div>\r\n          </Col>\r\n          <Col md className=\"article-image\">\r\n              <Image \r\n                src={image}\r\n                alt={article.frontmatter.title}\r\n                fluid\r\n                rounded\r\n               />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"article-text\">\r\n            <div dangerouslySetInnerHTML={{ __html: article.html }} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <hr />\r\n            <Link to=\"/library\">Go back to the library</Link>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Layout>\r\n  )\r\n\r\n}\r\n\r\nexport const query = graphql`\r\n  query($slug: String!, $name: String) {\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      html\r\n      frontmatter {\r\n        title\r\n        description\r\n        keywords\r\n        author\r\n        date\r\n      }\r\n    }\r\n    file(ext: { in: [\".jpg\", \".png\", \".svg\"] }, name: { eq: $name }) {\r\n          publicURL\r\n        }\r\n  }\r\n`"],"sourceRoot":""}